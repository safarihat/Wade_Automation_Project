from django.contrib.gis.db import models
from django.contrib.auth.models import User

class RegionalCouncil(models.Model):
    """
    Represents the geographic boundaries of a New Zealand Regional Council,
    loaded from a shapefile.
    """
    # These field names should match the attributes in your shapefile.
    # I'm using common names as placeholders.
    name = models.CharField(max_length=100, help_text="Name of the regional council.")
    
    # The geographic boundary of the council. SRID 4326 is standard WGS84 (lat/lon).
    geom = models.MultiPolygonField(srid=4326)

    def __str__(self):
        return self.name

class FreshwaterPlan(models.Model):
    """
    Represents a Freshwater Plan generated by the document generator.
    """
    class PaymentStatus(models.TextChoices):
        PENDING = 'pending', 'Pending'
        PAID = 'paid', 'Paid'

    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='freshwater_plans')
    latitude = models.FloatField()
    longitude = models.FloatField()
    location = models.PointField(srid=4326, help_text="Geographic coordinates (Point) of the plan's location.")
    map_image = models.ImageField(upload_to='map_images/', blank=True, null=True, help_text="Generated map image for the plan.")
    council = models.CharField(max_length=255, help_text="The council associated with the plan.")
    generated_plan = models.TextField(help_text="The generated content of the freshwater plan.")
    pdf_preview = models.FileField(upload_to='previews/', blank=True, null=True, help_text="A PDF preview of the generated plan.")
    pdf_final = models.FileField(upload_to='finals/', blank=True, null=True, help_text="The final PDF of the generated plan.")
    payment_status = models.CharField(
        max_length=20,
        choices=PaymentStatus.choices,
        default=PaymentStatus.PENDING,
        help_text="The payment status of the plan."
    )
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"Freshwater Plan for {self.council} by {self.user.username}"